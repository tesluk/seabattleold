package client;

import game.Field;
import game.Ship;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JProgressBar;

public class PrepareJForm extends javax.swing.JFrame {

    public ImageIcon FREE, DOT, SHIP, CHIP, FIRE;
    public final int N = 10;
    GameJForm gameJForm;
    JButton[][] fieldView;
    JProgressBar[] progress;
    MouseAdapter fieldListener;
    Field fieldLogic;
    Ship curShip = null;

    /** Creates new form PrepareJForm */
    public PrepareJForm(GameJForm gjf) {
        initComponents();
        this.gameJForm = gjf;
        initImages();
        init();
    }

    private void initImages() {
        FREE = new ImageIcon(getClass().getResource("/images/b_free.png"));
        DOT = new ImageIcon(getClass().getResource("/images/b_dot.png"));
        SHIP = new ImageIcon(getClass().getResource("/images/b_ship.png"));
        CHIP = new ImageIcon(getClass().getResource("/images/b_chip.png"));
        FIRE = new ImageIcon(getClass().getResource("/images/b_fire.png"));
    }

    private void init() {
        fieldListener = new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                JButton but = (JButton) e.getComponent();
                Point pos = getButtonNumber(but);
                int clicks = e.getClickCount();
                int mbut = e.getButton();
                if (mbut == MouseEvent.BUTTON3) {
                    rightClickOnField(pos);
                    return;
                }
                if (clicks == 2) {
                    doubleClickOnField(pos);
                    return;
                }
                clickOnField(pos);
            }
        };
        fieldLogic = new Field();
        fieldView = new JButton[N][N];
        int pic_size = 30;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                fieldView[i][j] = new JButton(FREE);
                fieldView[i][j].setSize(pic_size, pic_size);
                fieldView[i][j].setLocation(i * pic_size, j * pic_size);
                fieldView[i][j].setVisible(true);
                fieldView[i][j].addMouseListener(fieldListener);
                jPanel1.add(fieldView[i][j]);
            }
        }
        progress = new JProgressBar[4];
        progress[0] = jProgressBar1d;
        progress[1] = jProgressBar2d;
        progress[2] = jProgressBar3d;
        progress[3] = jProgressBar4d;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton4deck = new javax.swing.JButton();
        jProgressBar4d = new javax.swing.JProgressBar();
        jButton3deck = new javax.swing.JButton();
        jProgressBar3d = new javax.swing.JProgressBar();
        jButton2deck = new javax.swing.JButton();
        jProgressBar2d = new javax.swing.JProgressBar();
        jButton1deck = new javax.swing.JButton();
        jProgressBar1d = new javax.swing.JProgressBar();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton4deck.setText("4 - DECKS SHIP");
        jButton4deck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4deckActionPerformed(evt);
            }
        });

        jProgressBar4d.setMaximum(1);

        jButton3deck.setText("3 - DECKS SHIP");
        jButton3deck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3deckActionPerformed(evt);
            }
        });

        jProgressBar3d.setMaximum(2);

        jButton2deck.setText("2 - DECKS SHIP");
        jButton2deck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2deckActionPerformed(evt);
            }
        });

        jProgressBar2d.setMaximum(3);

        jButton1deck.setText("1 - DECK SHIP");
        jButton1deck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1deckActionPerformed(evt);
            }
        });

        jProgressBar1d.setMaximum(4);

        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("RANDOM");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("READY");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar2d, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2deck, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jProgressBar3d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar4d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4deck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3deck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1deck, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4deck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar4d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3deck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar3d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2deck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar2d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1deck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (fieldLogic.aliveShipsNumb() != 10) {
            return;
        }
        gameJForm.imReady(fieldLogic);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        for(int i =0; i<4;i++){
            progress[i].setValue(4-i);
        }
        fieldLogic.removeAllShips();
        fieldLogic.randomField();
        redrawField();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for(int i =0; i<4;i++){
            progress[i].setValue(0);
        }
        fieldLogic.removeAllShips();
        redrawField();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4deckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4deckActionPerformed
        if (progress[3].getValue() >= 1 || curShip != null) {
            return;
        }
        curShip = new Ship(true, 4);
    }//GEN-LAST:event_jButton4deckActionPerformed

    private void jButton3deckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3deckActionPerformed
        if (progress[2].getValue() >= 2 || curShip != null) {
            return;
        }
        curShip = new Ship(true, 3);
    }//GEN-LAST:event_jButton3deckActionPerformed

    private void jButton2deckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2deckActionPerformed
        if (progress[1].getValue() >= 3 || curShip != null) {
            return;
        }
        curShip = new Ship(true, 2);
    }//GEN-LAST:event_jButton2deckActionPerformed

    private void jButton1deckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1deckActionPerformed
        if (progress[0].getValue() >= 4 || curShip != null) {
            return;
        }
        curShip = new Ship(true, 1);
    }//GEN-LAST:event_jButton1deckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrepareJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrepareJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrepareJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrepareJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton1deck;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton2deck;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton3deck;
    private javax.swing.JButton jButton4deck;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1d;
    private javax.swing.JProgressBar jProgressBar2d;
    private javax.swing.JProgressBar jProgressBar3d;
    private javax.swing.JProgressBar jProgressBar4d;
    // End of variables declaration//GEN-END:variables

    public Point getButtonNumber(JButton b) {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (fieldView[i][j] == b) {
                    return new Point(i, j);
                }
            }
        }
        return null;
    }

    public void rightClickOnField(Point pos) {
        if (fieldLogic.isShip(pos.x, pos.y)) {
            Ship tmp = fieldLogic.getShip(pos.x, pos.y);
            if(tmp == null){
                return;
            }
            fieldLogic.removeShip(tmp);
            progress[tmp.getSize()-1].setValue(progress[tmp.getSize()-1].getValue()-1);
        }
        redrawField();
    }

    public void doubleClickOnField(Point pos) {
        int x = pos.x;
        int y = pos.y;
        Ship tmp = fieldLogic.getShip(x, y);
        if(tmp == null){
            return;
        }
        fieldLogic.removeShip(tmp);
        tmp.rotate();

        if (fieldLogic.isPosiblePlace(tmp, x, y)) {
            fieldLogic.placeShip(tmp, x, y);
        } else {
            tmp.rotate();
            if (fieldLogic.isPosiblePlace(tmp, x, y)) {
                fieldLogic.placeShip(tmp, x, y);
            }
        }
        redrawField();
    }

    public void clickOnField(Point pos) {
        int x = pos.x;
        int y = pos.y;

        if (curShip != null) {
            if (fieldLogic.isPosiblePlace(curShip, x, y)) {
                fieldLogic.placeShip(curShip, x, y);
                redrawField();
                progress[curShip.getSize() - 1].setValue(progress[curShip.getSize()
                        - 1].getValue() + 1);
                curShip = null;
            }
        }
    }

    public void redrawField() {
        int[][] intField = fieldLogic.getIntField();
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                setIconToButton(fieldView[i][j], intField[i][j]);
            }
        }
    }

    public void setIconToButton(JButton b, int id) {
        if (id == Field.FREE) {
            b.setIcon(FREE);
        }
        if (id == Field.DOT) {
            b.setIcon(DOT);
        }
        if (id == Field.FIRE) {
            b.setIcon(FIRE);
        }
        if (id == Field.CHIP) {
            b.setIcon(CHIP);
        }
        if (id == Field.SHIP) {
            b.setIcon(SHIP);
        }
    }
}
