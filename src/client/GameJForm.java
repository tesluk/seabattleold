/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GameJForm.java
 *
 * Created on 16.04.2012, 11:18:09
 */
package client;

import aids.BattleMessage;
import game.Field;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JButton;

/**
 *
 * @author TAB
 */
public class GameJForm extends javax.swing.JFrame {

    Client parent;
    PrepareJForm prepareJForm;
    MainJForm mainJForm;
    String opponent_name;
    boolean ready;
    boolean opp_ready;
    boolean can_make_move;
    Field field;
    Field opp_field;
    JButton[][] fieldView;
    JButton[][] fieldOppView;
    MouseAdapter fieldListener;

    public GameJForm(MainJForm mjf, Client parent) {
        ready = false;
        opp_ready = false;
        this.mainJForm = mjf;
        this.parent = parent;
        initComponents();
        init();
        initListener();
        initFields();
    }

    private void init() {
        prepareJForm = new PrepareJForm(this);
        prepareJForm.setVisible(true);
    }

    private void initListener() {
        fieldListener = new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                Point pos = getButtonNumber((JButton) e.getComponent());
                clickOnField(pos);
            }
        };
    }

    private void initFields() {
        fieldView = new JButton[prepareJForm.N][prepareJForm.N];
        int pic_size = 30;
        for (int i = 0; i < prepareJForm.N; i++) {
            for (int j = 0; j < prepareJForm.N; j++) {
                fieldView[i][j] = new JButton(prepareJForm.FREE);
                fieldView[i][j].setSize(pic_size, pic_size);
                fieldView[i][j].setLocation(i * pic_size, j * pic_size);
                fieldView[i][j].setVisible(true);
                jPanel1.add(fieldView[i][j]);
            }
        }
        
        fieldOppView = new JButton[prepareJForm.N][prepareJForm.N];
        for (int i = 0; i < prepareJForm.N; i++) {
            for (int j = 0; j < prepareJForm.N; j++) {
                fieldOppView[i][j] = new JButton(prepareJForm.FREE);
                fieldOppView[i][j].setSize(pic_size, pic_size);
                fieldOppView[i][j].setLocation(i * pic_size, j * pic_size);
                fieldOppView[i][j].setVisible(true);
                fieldOppView[i][j].addMouseListener(fieldListener);
                jPanel2.add(fieldOppView[i][j]);
                
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jPanel2.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 618, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    public Point getButtonNumber(JButton b) {
        for (int i = 0; i < prepareJForm.N; i++) {
            for (int j = 0; j < prepareJForm.N; j++) {
                if (fieldOppView[i][j] == b) {
                    return new Point(i, j);
                }
            }
        }
        return null;
    }

    public void opponentReady(Field fld) {
        opp_field = fld;
        opp_ready = true;
        if (ready) {
            startGame();
        }
    }

    public void imReady(Field fld) {
        mainJForm.client.sendField(new BattleMessage(BattleMessage.GAME_FIELD, parent.name, opponent_name), fld);
        field = fld;
        ready = true;
        if (opp_ready) {
            startGame();
        } else {
            mainJForm.showMessage("Waiting for opponent...");
        }
    }

    public void disableMoves() {
        can_make_move = false;
    }

    public void enableMoves() {
        can_make_move = true;
    }

    public void redrawMyField() {
        int[][] intField = field.getIntField();
        for (int i = 0; i < prepareJForm.N; i++) {
            for (int j = 0; j < prepareJForm.N; j++) {
                setIconToMyButton(fieldView[i][j], intField[i][j]);
            }
        }
    }

    public void setIconToMyButton(JButton b, int id) {
        if (id == Field.FREE) {
            b.setIcon(prepareJForm.FREE);
        }
        if (id == Field.DOT) {
            b.setIcon(prepareJForm.DOT);
        }
        if (id == Field.FIRE) {
            b.setIcon(prepareJForm.FIRE);
        }
        if (id == Field.CHIP) {
            b.setIcon(prepareJForm.CHIP);
        }
        if (id == Field.SHIP) {
            b.setIcon(prepareJForm.SHIP);
        }
    }

    public void redrawOppField() {
        int[][] intField = opp_field.getIntField();
        for (int i = 0; i < prepareJForm.N; i++) {
            for (int j = 0; j < prepareJForm.N; j++) {
                setIconToOppButton(fieldOppView[i][j], intField[i][j]);
            }
        }
    }

    public void setIconToOppButton(JButton b, int id) {
        if (id == Field.FREE) {
            b.setIcon(prepareJForm.FREE);
        }
        if (id == Field.DOT) {
            b.setIcon(prepareJForm.DOT);
        }
        if (id == Field.FIRE) {
            b.setIcon(prepareJForm.FIRE);
        }
        if (id == Field.CHIP) {
            b.setIcon(prepareJForm.CHIP);
        }
        if (id == Field.SHIP) {
            b.setIcon(prepareJForm.FREE);
        }
    }

    public void startGame() {
        this.setVisible(true);
        redrawMyField();
        redrawOppField();
    }

    public void clickOnField(Point pos) {
        if (!can_make_move) {
            return;
        }
        opp_field.makeShot(pos.x, pos.y);
        parent.sendMessage(new BattleMessage(BattleMessage.GAME_MOVE, parent.name, opponent_name, pos.x, pos.y));
        disableMoves();
        redrawOppField();
        redrawMyField();
    }

    public void opponentMove(BattleMessage mes) {
        field.makeShot(mes.x, mes.y);
        redrawMyField();
        redrawOppField();
    }
}
